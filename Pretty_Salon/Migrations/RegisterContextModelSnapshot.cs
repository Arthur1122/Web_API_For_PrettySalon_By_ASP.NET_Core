// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pretty_Salon.Data;

namespace Pretty_Salon.Migrations
{
    [DbContext(typeof(RegisterContext))]
    partial class RegisterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pretty_Salon.Data.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Name = "David Freeman"
                        });
                });

            modelBuilder.Entity("Pretty_Salon.Data.Entities.Hairdresser", b =>
                {
                    b.Property<int>("HairdresserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("SalonId");

                    b.HasKey("HairdresserId");

                    b.HasIndex("SalonId");

                    b.ToTable("Hairdressers");

                    b.HasData(
                        new
                        {
                            HairdresserId = 1,
                            Name = "Gil Markes",
                            SalonId = 1
                        });
                });

            modelBuilder.Entity("Pretty_Salon.Data.Entities.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId");

                    b.Property<DateTime>("Day");

                    b.Property<int?>("HairdresserId");

                    b.Property<int?>("SalonId");

                    b.Property<string>("TimeOfDay");

                    b.HasKey("RegistrationId");

                    b.HasIndex("ClientId");

                    b.HasIndex("HairdresserId");

                    b.HasIndex("SalonId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            RegistrationId = 1,
                            ClientId = 1,
                            Day = new DateTime(2019, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HairdresserId = 1,
                            SalonId = 1,
                            TimeOfDay = "03:00 PM"
                        });
                });

            modelBuilder.Entity("Pretty_Salon.Data.Entities.Salon", b =>
                {
                    b.Property<int>("SalonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("SalonId");

                    b.ToTable("Salons");

                    b.HasData(
                        new
                        {
                            SalonId = 1,
                            Name = "Pretty Salon 777"
                        });
                });

            modelBuilder.Entity("Pretty_Salon.Data.Entities.Hairdresser", b =>
                {
                    b.HasOne("Pretty_Salon.Data.Entities.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonId");
                });

            modelBuilder.Entity("Pretty_Salon.Data.Entities.Registration", b =>
                {
                    b.HasOne("Pretty_Salon.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Pretty_Salon.Data.Entities.Hairdresser", "Hairdresser")
                        .WithMany()
                        .HasForeignKey("HairdresserId");

                    b.HasOne("Pretty_Salon.Data.Entities.Salon", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonId");
                });
#pragma warning restore 612, 618
        }
    }
}
